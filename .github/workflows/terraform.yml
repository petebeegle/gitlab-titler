name: 'Terraform'

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    - name: Terraform Format
      id: fmt
      run: terraform fmt -check
      continue-on-error: true
    - name: Terraform Init
      id: init
      run: terraform init -no-color
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      continue-on-error: true
    - name: Terraform Plan
      id: plan
      if: github.event_name == 'pull_request'
      run: terraform plan -no-color -input=false
      continue-on-error: true
    - name: Update Pull Request
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        header: terraform
        github-token: ${{ secrets.GITHUB_TOKEN }}
        message: |
          #### Terraform Format and Style 🖌`${{ steps.fmt.outcome }}`
          <details><summary>Format and Style Output</summary>

          ```
          ${{ steps.fmt.outputs.stdout }}
          ```

          </details>

          #### Terraform Initialization ⚙️`${{ steps.init.outcome }}`
          <details><summary>Initialization Output</summary>

          ```
          ${{ steps.init.outputs.stdout }}
          ```

          </details>

          #### Terraform Validation 🤖`${{ steps.validate.outcome }}`
          <details><summary>Validation Output</summary>

          ```
          ${{ steps.validate.outputs.stdout }}
          ```

          </details>

          #### Terraform Plan 📖`${{ steps.plan.outcome }}`

          <details><summary>Show Plan</summary>

          ```
          ${{ steps.plan.outputs.stdout }}
          ```

          </details>

          *Pushed by: @${{ github.actor }}, Action: `${{ github.event_name }}`*
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
